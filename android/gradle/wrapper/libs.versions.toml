[versions]
androidGradlePlugin = "8.1.2"
grpcOkhttp = "1.59.0"
kotlin = "1.9.10"

androidxCore = "1.12.0"
compose = "2023.10.01"
composeCompiler = "1.5.3"
composeMaterial3 = "1.2.0-alpha10"
composeHiltNavigatiaon = "1.0.0"
androidxLifecycle = "2.6.2"
androidxActivity = "1.8.0"
androidxFragment = "1.7.0-alpha06"
kotlinxCoroutines = "1.7.3"
accompanist = "0.30.1"
kotlinxSerialization = "1.6.0"
firebaseBom = "32.4.1"
okHttp = "4.11.0"
retrofit = "2.9.0"
sandwich = "1.3.7"
androidxLifecycleProcess = "2.6.2"
nexusPlugin = "0.25.3"

[libraries]
androidGradlePlugin = { group = "com.android.tools.build", name = "gradle", version.ref = "androidGradlePlugin" }
grpc-okhttp = { module = "io.grpc:grpc-okhttp", version.ref = "grpcOkhttp" }
kotlinGradlePlugin = { group = "org.jetbrains.kotlin", name = "kotlin-gradle-plugin", version.ref = "kotlin" }
firebaseGradlePlugin = { module = "com.google.gms:google-services", version = "4.4.0" }
kotlinxSerializationGradlePlugin = { module = "org.jetbrains.kotlin:kotlin-serialization", version.ref = "kotlin" }

# Core
androidxLifecycleProcess = { group = "androidx.lifecycle", name = "lifecycle-process", version.ref = "androidxLifecycleProcess" }

# Coroutine
kotlinxCoroutinesCore = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-core", version.ref = "kotlinxCoroutines" }

kotlinxCollectionsImmutable = { module = "org.jetbrains.kotlinx:kotlinx-collections-immutable", version = "0.3.5" }
kotlinxAtomicfu = { module = "org.jetbrains.kotlinx:atomicfu", version = "0.22.0" }

# UI

composeBom = { module = "androidx.compose:compose-bom", version.ref = "compose" }
composeRuntime = { module = "androidx.compose.runtime:runtime" }
composeUi = { module = "androidx.compose.ui:ui" }
composeUiUtil = { module = "androidx.compose.ui:ui-util" }
composeUiTooling = { module = "androidx.compose.ui:ui-tooling" }
composeUiToolingPreview = { module = "androidx.compose.ui:ui-tooling-preview" }
composeAnimation = { module = "androidx.compose.animation:animation" }
composeAnimationGraphics = { module = "androidx.compose.animation:animation-graphics" }
composeMaterial = { module = "androidx.compose.material:material" }
composeMaterial3 = { module = "androidx.compose.material3:material3", version.ref = "composeMaterial3" }
composeMaterialWindowSize = { module = "androidx.compose.material3:material3-window-size-class", version.ref = "composeMaterial3" }
composeMaterialIcon = { module = "androidx.compose.material:material-icons-extended" }
composeNavigation = { module = "androidx.navigation:navigation-compose", version = "2.7.4" }
composeHiltNavigtation = { module = "androidx.hilt:hilt-navigation-compose", version.ref = "composeHiltNavigatiaon" }
composeLintCheck = { module = "com.slack.lint.compose:compose-lint-checks", version = "1.2.0" }
animation-graphics-android = { group = "androidx.compose.animation", name = "animation-graphics-android", version = "1.5.4" }

androidxAnnotation = { module = "androidx.annotation:annotation", version = "1.7.0" }
androidxFragment = { module = "androidx.fragment:fragment-ktx", version.ref = "androidxFragment" }
androidxCoreKtx = { module = "androidx.core:core-ktx", version.ref = "androidxCore" }
androidxAppCompat = { module = "androidx.appcompat:appcompat", version = "1.7.0-alpha03" }
androidxLifecycleLifecycleRuntimeKtx = { module = "androidx.lifecycle:lifecycle-runtime-ktx", version.ref = "androidxLifecycle" }
androidxActivityActivityCompose = { module = "androidx.activity:activity-compose", version.ref = "androidxActivity" }
androidxDatastoreDatastorePreferences = { module = "androidx.datastore:datastore-preferences-core", version = "1.1.0-alpha05" }
androidxSecurity = { module = "androidx.security:security-crypto-ktx", version = "1.1.0-alpha06" }
androidxActivity = { module = "androidx.activity:activity-ktx", version = "1.8.0" }
androidxBrowser = { module = "androidx.browser:browser", version = "1.6.0" }
androidxWindow = { module = "androidx.window:window", version = "1.1.0" }

# Data

kotlinSerializationJson = { module = "org.jetbrains.kotlinx:kotlinx-serialization-json", version.ref = "kotlinxSerialization" }

okHttpCore = { module = "com.squareup.okhttp3:okhttp", version.ref = "okHttp" }
okHttpLoggingInterceptor = { module = "com.squareup.okhttp3:logging-interceptor", version.ref = "okHttp" }
retrofit = { module = "com.squareup.retrofit2:retrofit", version.ref = "retrofit" }
serializationConverter = { module = "com.jakewharton.retrofit:retrofit2-kotlinx-serialization-converter", version = "1.0.0" }
sandwich = { module = "com.github.skydoves:sandwich", version.ref = "sandwich" }

# RLP
rlp = { module = "org.tdf:rlp", version = "1.1.20" }

# biometric
androidxBiometric = { module = "androidx.biometric:biometric-ktx", version = "1.2.0-alpha05" }

# Firebase
firebaseBom = { module = "com.google.firebase:firebase-bom", version.ref = "firebaseBom" }
firebaseCommon = { module = "com.google.firebase:firebase-common" }
firebaseAuth = { module = "com.google.firebase:firebase-auth" }
firebaseMessaging = { module = "com.google.firebase:firebase-messaging" }
googleAuth = { module = "com.google.android.gms:play-services-auth", version = "20.7.0" }

# Logger
timber = { module = "com.jakewharton.timber:timber", version = "5.0.1" }

# eventbus
eventbus = { module = "org.greenrobot:eventbus", version = "3.3.1" }

# flow
flow = { module = "com.nftco:flow-jvm-sdk", version = "0.7.3" }

[plugins]
androidGradlePlugin = { id = "com.android.application", version.ref = "androidGradlePlugin" }
androidGradleLibraryPlugin = { id = "com.android.library", version.ref = "androidGradlePlugin" }
kotlinGradlePlugin = { id = "org.jetbrains.kotlin.android", version.ref = "kotlin" }
nexusPlugin = { id = "com.vanniktech.maven.publish", version.ref = "nexusPlugin" }

[bundles]
networking = ["okHttpCore", "okHttpLoggingInterceptor", "retrofit", "serializationConverter", "kotlinSerializationJson"]
plugins = [
    "androidGradlePlugin",
    "kotlinGradlePlugin",
    "firebaseGradlePlugin",
    "kotlinxSerializationGradlePlugin",
]